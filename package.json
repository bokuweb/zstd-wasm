{
  "name": "@bokuweb/zstd-wasm",
  "version": "0.0.3",
  "main": "lib/index.js",
  "repository": "ssh://git@github.com/bokuweb/zstd-wasm.git",
  "author": "<bokuweb12@gmail.com>",
  "license": "MIT",
  "scripts": {
    "tsc": "tsc -p tsconfig.json --skipLibCheck",
    "bundle": "webpack",
    "serve": "webpack-dev-server",
    "benchmark": "npx ts-node ./benchmark/index.ts",
    "copy": "cp ./zstd/zstd.wasm ./lib/wasm && cp ./zstd/zstd.js ./lib/wasm",
    "combine:zstd": "cd zstd/build/single_file_libs && bash ./create_single_file_library.sh && cp zstd.c ../../zstd.c",
    "build:wasm": "docker run --rm -v $(pwd):/src -u $(id -u):$(id -g) emscripten/emsdk emcc zstd.c -flto -o ./zstd.js -O3 --memory-init-file 0 --post-js export_module.js -s EXPORTED_FUNCTIONS=\"['_ZSTD_isError', '_ZSTD_getFrameContentSize', '_ZSTD_getErrorName', '_ZSTD_decompress', '_ZSTD_compress', '_ZSTD_compressBound', '_malloc', '_free']\" -s EXPORTED_RUNTIME_METHODS=\"['cwrap']\" -s FILESYSTEM=0 -s ALLOW_MEMORY_GROWTH=1",
    "build": "npm run build:wasm",
    "test": "jest"
  },
  "publishConfig": {
    "access": "public"
  },
  "devDependencies": {
    "@types/benchmark": "2.1.0",
    "@types/jest": "26.0.23",
    "@types/node": "15.6.1",
    "benchmark": "2.1.4",
    "copy-webpack-plugin": "^6",
    "file-loader": "^6.2.0",
    "html-webpack-plugin": "^3.2.0",
    "jest": "27.0.3",
    "text-encoding": "^0.7.0",
    "ts-jest": "27.0.3",
    "ts-loader": "^8",
    "typescript": "4.3.2",
    "webpack": "^4.29.4",
    "webpack-cli": "^3.1.1",
    "webpack-dev-server": "^3.1.0"
  }
}
